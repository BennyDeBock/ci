name: Release-notes to Vapor docs

on: 
  workflow_call:
    inputs:
      version:
          type: string
          description: The release label
          required: true
      description:
          type: string
          description: The description of the release
          required: true
      URL: 
          type: string
          description: The URL of the release
          required: true
      repo: 
          type: string
          description: The repo where the release was created
          required: true
    secrets:
      RELEASE_NOTES_PAT: 
        required: true

env:
  GH_TOKEN: ${{ secrets.RELEASE_NOTES_PAT }}

jobs:
  update-release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          global: true
          name: 'VaporBot'
          email: 'bot@vapor.codes'
          actor: 'VaporBot'
          token: '${{ secrets.RELEASE_NOTES_PAT }}'
        # Creates variables to use
        # Clones the repo
        # Copies the current file and adds the changes to a temporary file
        # Copies the temporary file replacing the current release notes
        # Creates a branch and commits changes
        # Creates a PR
      - name: Clone docs and insert release notes
        run: |
          echo '========== Prepare Special Characters =========='
          version=$(echo "${{ inputs.version }}" | sed "s/'/\\\\\\\\\\\\\\\\'/g")
          description=$(echo "${{ inputs.description }}" | sed "s/'/\\\\\\\\\\\\\\\\'/g")
          URL=$(echo "${{ inputs.URL }}" | sed "s/'/\\\\\\\\\\\\\\\\'/g")
          repo=$(echo "${{ inputs.repo }}" | sed "s/'/\\\\\\\\\\\\\\\\'/g")

          echo '========== Clone Repository =========='
          gh repo clone vapor/docs
          cd docs 

          echo '========== Add Release =========='
          awk -v version="### $version" -v description="$description" -v link="Link: [$URL]($URL)" $'/${{ inputs.repo }}/ {print; printf "\\n%s  \\n%s \\n%s \\n\\n", version, description, link; next}1' docs/release-notes.md > temp
          cat temp > docs/release-notes.md

          echo '========== Create new branch =========='
          branchName=$(echo "${{ inputs.version }}" | grep -Po '(?<=v)[^ ]+')
          git checkout -b "release-notes/${{inputs.repo}}v${branchName}"

          echo '========== Stage changes =========='
          git add docs/release-notes.md

          echo '========== Commit changes =========='
          git commit -m "Add release ${{ inputs.version }} under ${{ inputs.repo }}"

          echo '========== Pushing changes =========='
          git remote set-url origin https://VaporBot:${{secrets.RELEASE_NOTES_PAT}}@github.com/vapor/docs.git
          git push --set-upstream origin "release-notes/${{inputs.repo}}v${branchName}"

          echo '========== Create pull request =========='
          gh pr create --title "Update release notes" --body "This pr adds release ${{ inputs.version }} to the release notes in the vapor documentation for the ${{ inputs.repo }} repository."
